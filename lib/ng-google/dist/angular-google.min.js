angular.module("google",["google.maps","google.templates"]),angular.module("google.maps.services.Geocoder",[]).factory("Geocoder",["$q","$timeout","google",function(e,o,t){function n(){var n=new t.maps.Geocoder;this.geocode=function(r){var a=e.defer();return o(function(){n.geocode(r,function(e,o){o==t.maps.GeocoderStatus.OK?a.resolve(e):a.reject(o)})}),a.promise}}return n}]),angular.module("google.maps.services.LatLng",[]).factory("LatLng",function(){return google.maps.LatLng}),angular.module("google.maps.controllers.Map",[]).controller("MapCtrl",["$scope","$element","$attrs","$transclude","$q","$timeout","$document","Map","LatLng","googleMapsConfig","Map",function(e,o,t,n,r,a,i,l,s,g,l){var c=this,p=800,m={},u=[];this.start=function(){t.center&&(m.center=e.$eval(t.center)),t.zoom&&(m.zoom=e.$eval(t.zoom)),m=angular.extend(g,m),m.center=new s(m.center[0],m.center[1]);var n=this.map=new l(o.children("#map")[0],m);google.maps.event.addListener(n,"zoom_changed",function(){if(t.onZoomChanged){var o=$parse(t.onZoomChanged);o(e,{$map:this})}e.$emit("map:zoom_changed",n)}),google.maps.event.addListener(n,"click",function(){if(t.onClick){var o=$parse(t.onClick);o(e,{$map:this})}e.$emit("map:click",n)})},this.getMap=function(){var e=r.defer();return a(function(){e.resolve(c.map)},p),e.promise},this.addMarker=function(e){u.push(e)},this.getMarkers=function(){var e=r.defer();return a(function(){e.resolve(u)},p),e.promise}}]),angular.module("google.maps.services.Map",[]).factory("Map",function(){return google.maps.Map}),angular.module("google.maps.controllers.Marker",[]).controller("MarkerCtrl",["$scope","$element","$attrs","google","Marker","LatLng",function(e,o,t,n,r,a){var i,l=this,s={};this.start=function(o){t.position&&(s.position=e.$eval(t.position)),t.title&&(s.title=e.$eval(t.title)),s.position=new a(s.position[0],s.position[1]),i=l.marker=new r(s),o.getMap().then(function(e){i.setMap(e)}),o.addMarker(i),n.maps.event.addListener(i,"mouseover",function(){if(t.onMouseover){var o=$parse(t.onMouseover);o(e,{$marker:this})}e.$emit("marker:mouseover",i)}),n.maps.event.addListener(i,"click",function(){if(t.onClick){var o=$parse(t.onClick);o(e,{$marker:this})}e.$emit("marker:click",i)}),n.maps.event.addListener(i,"dragend",function(){if(t.onDragEnd){var o=$parse(t.onDragEnd);o(e,{$marker:this})}e.$emit("marker:dragend",i)})}}]),angular.module("google.maps.services.Marker",[]).factory("Marker",function(){return google.maps.Marker}),angular.module("google.maps.controllers",["google.maps.controllers.Marker","google.maps.controllers.Map"]),angular.module("google.maps.directives",["google.maps.directives.googleMaps","google.maps.directives.marker"]),angular.module("google.maps.services.google",[]).factory("google",["$window",function(e){return e.google}]),describe("googleMaps directive",function(){var e,o,t,n,r;beforeEach(module("google")),beforeEach(module("google.maps.directives.googleMaps")),beforeEach(module("google.templates")),beforeEach(inject(function(a){e=a.get("$rootScope"),o=a.get("$compile");var i=e.$new();i.markers=[{position:{latitude:-40.357,longitude:140.2}},{position:{latitude:-20.237,longitude:110.444}},{position:{latitude:-44.237,longitude:230.444}}],i.$digest();var l='<google-maps data-center="[\n-85.10, 100.00]">\n	<marker ng-repeat="marker in markers" data-position="[\n		{{ marker.position.latitude }},\n		{{ marker.position.longitude }}\n	]"></marker>\n</google-maps>';n=angular.element(l),n=o(n)(i),t=n.scope(),t.$digest(),r=n.controller("googleMaps")})),afterEach(inject(function(e){e.flush()})),it("should retrieve the map",function(){r.getMap().then(function(e){expect(typeof e.getCenter().lat()).toBe("number")})}),it("should retrive the markers",function(){r.getMarkers().then(function(e){expect(e instanceof Array).toBe(!0),expect(e.length).toBe(3)})}),it("should pass the center through element attributes",function(){r.getMap().then(function(e){expect(e.getCenter().lat()).toBe(-85.1),expect(e.getCenter().lng()).toBe(100)})}),it("should have ng-scope class",function(){expect(n.hasClass("ng-scope")).toBe(!0)}),it("should detect zoom changes",function(){var e=!1;t.$on("map:zoom_changed",function(){e=!0}),r.getMap().then(function(e){e.setZoom(4)}).finally(function(){expect(e).toBe(!0)})}),describe("multiple maps",function(){var t,n,r;beforeEach(inject(function(){t=e.$new(),t.markers=[{position:{latitude:-40.357,longitude:140.2}},{position:{latitude:-20.237,longitude:110.444}},{position:{latitude:-44.237,longitude:230.444}}],t.$digest(),html='<google-maps id="map-one" data-center="[\n-30.10, 45.00]">\n	<marker ng-repeat="marker in markers" data-position="[\n		{{ marker.position.latitude }},\n		{{ marker.position.longitude }}\n	]"></marker>\n</google-maps>\n\n<google-maps id="map-two" data-center="[\n-22.10, 30.00]">\n	<marker ng-repeat="marker in markers" data-position="[\n		{{ marker.position.latitude }},\n		{{ marker.position.longitude }}\n	]"></marker>\n</google-maps>';var a=angular.element(html);o(a)(t),n=angular.element(a[0]),r=angular.element(a[2]),n.scope().$digest(),r.scope().$digest(),mapOneCtrl=n.controller("googleMaps"),mapTwoCtrl=r.controller("googleMaps")})),it("should handle multiple maps with multiple events",function(){t.$on("map:zoom_changed",function(e,o){-30.1===o.getCenter().lat()&&(expect(o.getCenter().lng()).toEqual(45),expect(o.getZoom()).toEqual(7)),30===o.getCenter().lng()&&(expect(o.getCenter().lat()).toEqual(-22.1),expect(o.getZoom()).toEqual(8))}),mapOneCtrl.getMap().then(function(e){e.setZoom(7)}),mapTwoCtrl.getMap().then(function(e){e.setZoom(8)})}),it("should have 3 markers",function(){mapOneCtrl.getMarkers().then(function(e){expect(e.length).toEqual(3)})}),it("should have 3 markers",function(){mapTwoCtrl.getMarkers().then(function(e){expect(e.length).toEqual(3)})})})}),angular.module("google.maps.directives.googleMaps",[]).directive("googleMaps",function(){return{restrict:"E",transclude:!0,templateUrl:"maps/google-maps.directive.tpl.html",controller:"MapCtrl",require:"?googleMaps",link:function(e,o,t,n){n.start()}}}),describe("googleMaps directive",function(){var e,o,t,n,r,a;beforeEach(module("google")),beforeEach(module("google.maps.directives.googleMaps")),beforeEach(module("google.templates")),beforeEach(inject(function(i){e=i.get("$rootScope"),o=i.get("$compile"),a=e.$new(),a.markers=[{position:{latitude:-40.357,longitude:140.2}},{position:{latitude:-39.357,longitude:140.2}},{position:{latitude:-38.357,longitude:140.2}},{position:{latitude:-32.357,longitude:140.2}}],a.$digest();var l='<google-maps data-center="[\n-85.10, 100.00]">\n	<marker ng-repeat="marker in markers" data-position="[\n		{{ marker.position.latitude }},\n		{{ marker.position.longitude }}\n	]" data-title="Hey"></marker>\n</google-maps>';n=angular.element(l),n=o(n)(a),t=n.scope(),t.$digest(),r=n.controller("googleMaps")})),afterEach(inject(function(e){e.flush()})),it("should store all markers correct position",function(){r.getMarkers().then(function(e){e.forEach(function(e,o){a.markers.forEach(function(t,n){o===n&&(expect(e.getPosition().lng()).toMatch(t.position.longitude),expect(e.getPosition().lat()).toBe(t.position.latitude))})})})})}),angular.module("google.maps.directives.marker",[]).directive("marker",function(){return{restrict:"E",controller:"MarkerCtrl",require:["?^googleMaps","marker"],link:function(e,o,t,n){var r=n[0],a=n[1];a.start(r)}}}),angular.module("google.maps",["google.maps.controllers","google.maps.services","google.maps.directives"]).value("googleMapsConfig",{center:[-34.397,150.644],zoom:5}),angular.module("google.maps.services",["google.maps.services.Geocoder","google.maps.services.google","google.maps.services.Map","google.maps.services.LatLng","google.maps.services.Marker"]);